{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/competency/": {
            "post": {
                "description": "post single competency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competency"
                ],
                "summary": "Post competency",
                "parameters": [
                    {
                        "description": "Competency request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCompetency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCompetency"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/competency/{id}": {
            "get": {
                "description": "get single competency by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competency"
                ],
                "summary": "Show competency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCompetency"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/competencyProfession/": {
            "post": {
                "description": "post single competency-profession connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competencyProfession"
                ],
                "summary": "Post competency-profession connection",
                "parameters": [
                    {
                        "description": "CompetencyProfession data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCompetencyProfession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/course/": {
            "post": {
                "description": "post single course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Post course",
                "parameters": [
                    {
                        "description": "Course data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCourse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/course/{id}": {
            "get": {
                "description": "get single course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Show course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCourse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/courseCompetency/": {
            "post": {
                "description": "post single course-competency connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courseCompetency"
                ],
                "summary": "Post course-competency connection",
                "parameters": [
                    {
                        "description": "Course-competency data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostCourseCompetency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/discipline/": {
            "post": {
                "description": "post single discipline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discipline"
                ],
                "summary": "Post discipline",
                "parameters": [
                    {
                        "description": "Discipline data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostDiscipline"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetDiscipline"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/discipline/{id}": {
            "get": {
                "description": "get single discipline by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discipline"
                ],
                "summary": "Show discipline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetDiscipline"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/educationalProgram/": {
            "post": {
                "description": "post single educational program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "educational program"
                ],
                "summary": "Post educational program",
                "parameters": [
                    {
                        "description": "Educational program data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostEducationalProgram"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetEducationalProgram"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/educationalProgram/{id}": {
            "get": {
                "description": "get single educational program by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "educational program"
                ],
                "summary": "Show educational program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Educational program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetEducationalProgram"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/knowledge/": {
            "post": {
                "description": "post single knowledge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "knowledge"
                ],
                "summary": "Post knowledge",
                "parameters": [
                    {
                        "description": "Knowledge request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostKnowledge"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetKnowledge"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/knowledge/{id}": {
            "get": {
                "description": "get single knowledge by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "knowledge"
                ],
                "summary": "Show knowledge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Knowledge ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetKnowledge"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/knowledgeCompetency/": {
            "post": {
                "description": "post single knowledge-competency connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "knowledgeCompetency"
                ],
                "summary": "Post knowledge-competency connection",
                "parameters": [
                    {
                        "description": "Knowledge-competency request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostKnowledgeCompetency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/organization/": {
            "post": {
                "description": "post single organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Post organization",
                "parameters": [
                    {
                        "description": "Organization data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostOrganization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetOrganization"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/organization/{id}": {
            "get": {
                "description": "get single organization by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Show organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetOrganization"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/portfolio/": {
            "post": {
                "description": "post single portfolio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Post portfolio",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PostPortfolio"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/portfolio/{id}": {
            "get": {
                "description": "get single portfolio by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Show portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetPortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/profession/": {
            "post": {
                "description": "post single profession",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profession"
                ],
                "summary": "Post profession",
                "parameters": [
                    {
                        "description": "Profession data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostProfession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetProfession"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/profession/{id}": {
            "get": {
                "description": "get single profession by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profession"
                ],
                "summary": "Show profession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profession ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetProfession"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/project/": {
            "post": {
                "description": "post single project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Post project",
                "parameters": [
                    {
                        "description": "Project data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetProject"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/project/{id}": {
            "get": {
                "description": "get single project by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Show project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetProject"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/projectPortfolio/": {
            "post": {
                "description": "post single project-portfolio connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projectPortfolio"
                ],
                "summary": "Post project-portfolio connection",
                "parameters": [
                    {
                        "description": "Personal project data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostProjectPortfolio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/projectPortfolioCompetency/": {
            "post": {
                "description": "post single project-portfolio-competency connection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projectPortfolioCompetency"
                ],
                "summary": "Post project-portfolio-competency connection",
                "parameters": [
                    {
                        "description": "Personal project competency",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostProjectPortfolioCompetency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/student/": {
            "post": {
                "description": "post single student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Post student",
                "parameters": [
                    {
                        "description": "Student`s data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostStudent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetStudent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/student/{id}": {
            "get": {
                "description": "get single student by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "student"
                ],
                "summary": "Show student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetStudent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/studyGroup/": {
            "post": {
                "description": "Student`s course in current semester",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "studyGroup"
                ],
                "summary": "Post student`s course in current semester",
                "parameters": [
                    {
                        "description": "Personal current student`s project",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostStudyGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/technology/": {
            "post": {
                "description": "post single technology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "technology"
                ],
                "summary": "Post technology",
                "parameters": [
                    {
                        "description": "Technology request",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostTechnology"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetTechnology"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/technology/{id}": {
            "get": {
                "description": "get single technology by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "technology"
                ],
                "summary": "Show technology",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Technology ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetTechnology"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/trajectory/": {
            "post": {
                "description": "post single student`s archive course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trajectory"
                ],
                "summary": "Post student`s archive course",
                "parameters": [
                    {
                        "description": "Trajectory`s data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PostTrajectory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetTrajectory"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "502": {
                        "description": "Bad Gateway"
                    }
                }
            }
        },
        "/api/v1/trajectory/{id}": {
            "get": {
                "description": "get single trajectory by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trajectory"
                ],
                "summary": "Show trajectory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trajectory ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetTrajectory"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.GetCompetency": {
            "type": "object",
            "properties": {
                "competencyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "competencyKnowledge": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "знание 1",
                        " знание 2..."
                    ]
                },
                "competencyMainTechnology": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "competencySkills": {
                    "type": "string",
                    "example": "навык 1, навык 2..."
                },
                "competencyTitle": {
                    "type": "string",
                    "example": "Название компетенции"
                }
            }
        },
        "model.GetCourse": {
            "type": "object",
            "properties": {
                "courseCompetencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "компетенция 1",
                        " компетенция 2..."
                    ]
                },
                "courseDescription": {
                    "type": "string",
                    "example": "Описание курса"
                },
                "courseDiscipline": {
                    "type": "string",
                    "example": "Дисциплина, к которой отностися курс"
                },
                "courseId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "courseTeacher": {
                    "type": "string",
                    "example": "Преподаватель"
                },
                "courseTitle": {
                    "type": "string",
                    "example": "Название курса"
                }
            }
        },
        "model.GetDiscipline": {
            "type": "object",
            "properties": {
                "disciplineDescription": {
                    "type": "string",
                    "example": "Описание дисциплины"
                },
                "disciplineEducationalProgram": {
                    "type": "string",
                    "example": "Образовательная программа, в которую входит цисциплина"
                },
                "disciplineId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "disciplineTitle": {
                    "type": "string",
                    "example": "Название дисциплины"
                }
            }
        },
        "model.GetEducationalProgram": {
            "type": "object",
            "properties": {
                "educationalProgramDexcription": {
                    "type": "string",
                    "example": "Описание образовательной программы"
                },
                "educationalProgramId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "educationalProgramOrganization": {
                    "type": "string",
                    "example": "организация, отвечающая за образовательную программу"
                },
                "educationalProgramTitle": {
                    "type": "string",
                    "example": "Название образовательной программы"
                }
            }
        },
        "model.GetKnowledge": {
            "type": "object",
            "properties": {
                "knowledgeId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "knowledgeTitle": {
                    "type": "string",
                    "example": "Название знания"
                }
            }
        },
        "model.GetOrganization": {
            "type": "object",
            "properties": {
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "organizationTitle": {
                    "type": "string",
                    "example": "Название организации"
                }
            }
        },
        "model.GetPersonalProject": {
            "type": "object",
            "properties": {
                "personalProjectCompetencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Компетенции участика в этом проекте"
                    ]
                },
                "personalProjectMainTechnology": {
                    "type": "string",
                    "example": "Основная технология проекта"
                },
                "personalProjectSemester": {
                    "type": "string",
                    "example": "Семестр, в котором участик работал над проектом"
                },
                "personalProjectTeamRole": {
                    "type": "string",
                    "example": "Роль участника в команде"
                },
                "projectDescription": {
                    "type": "string",
                    "example": "Курс направлен на изучение поведения капибар в дикой природе..."
                },
                "projectId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "projectLifeScenarion": {
                    "type": "string",
                    "example": "Проект позволит подобрать идеальную длину шерстки для ваших капибар"
                },
                "projectResult": {
                    "type": "string",
                    "example": "Данные о зависимости длины шерстки капибар от продолжительности их жизни"
                },
                "projectTitle": {
                    "type": "string",
                    "example": "Исследование зивисимости длины шерстки капибар от продолжительности их жизни"
                }
            }
        },
        "model.GetPortfolio": {
            "type": "object",
            "properties": {
                "portfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "portfolioProjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GetPersonalProject"
                    }
                }
            }
        },
        "model.GetProfession": {
            "type": "object",
            "properties": {
                "professionCompetencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "компетенция 1",
                        " компетенция 2..."
                    ]
                },
                "professionDescription": {
                    "type": "string",
                    "example": "Описание профессии"
                },
                "professionId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "professionTitle": {
                    "type": "string",
                    "example": "Название профессии"
                }
            }
        },
        "model.GetProject": {
            "type": "object",
            "properties": {
                "projectDescription": {
                    "type": "string",
                    "example": "Курс направлен на изучение поведения капибар в дикой природе..."
                },
                "projectId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "projectLifeScenarion": {
                    "type": "string",
                    "example": "Проект позволит подобрать идеальную длину шерстки для ваших капибар"
                },
                "projectMainTechnology": {
                    "type": "string",
                    "example": "Название технологии"
                },
                "projectResult": {
                    "type": "string",
                    "example": "Данные о зависимости длины шерстки капибар от продолжительности их жизни"
                },
                "projectTitle": {
                    "type": "string",
                    "example": "Исследование зивисимости длины шерстки капибар от продолжительности их жизни"
                }
            }
        },
        "model.GetStudent": {
            "type": "object",
            "properties": {
                "studentFullName": {
                    "type": "string",
                    "example": "Фамилия Имя Отчество"
                },
                "studentId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "studentPortfolio": {
                    "$ref": "#/definitions/model.GetPortfolio"
                },
                "studentSemester": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "model.GetTechnology": {
            "type": "object",
            "properties": {
                "technologyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "technologyTitle": {
                    "type": "string",
                    "example": "Название технологии"
                }
            }
        },
        "model.GetTrajectory": {
            "type": "object",
            "properties": {
                "trajectoryCourse": {
                    "type": "string",
                    "example": "Название курса"
                },
                "trajectoryId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "trajectorySemester": {
                    "type": "integer",
                    "example": 3
                },
                "trajectoryStudent": {
                    "type": "string",
                    "example": "Фамилия Имя Отчество"
                }
            }
        },
        "model.PostCompetency": {
            "type": "object",
            "properties": {
                "competencyMainTechnology": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "competencySkills": {
                    "type": "string",
                    "example": "навык 1, навык 2..."
                },
                "competencyTitle": {
                    "type": "string",
                    "example": "Название компетенции"
                }
            }
        },
        "model.PostCompetencyProfession": {
            "type": "object",
            "properties": {
                "competencyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "professionId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostCourse": {
            "type": "object",
            "properties": {
                "courseDescription": {
                    "type": "string",
                    "example": "Описание курса"
                },
                "courseDisciplineId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "courseTeacher": {
                    "type": "string",
                    "example": "Фамилия Имя Отчество"
                },
                "courseTitle": {
                    "type": "string",
                    "example": "Название курса"
                }
            }
        },
        "model.PostCourseCompetency": {
            "type": "object",
            "properties": {
                "competencyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "courseId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostDiscipline": {
            "type": "object",
            "properties": {
                "disciplineDescription": {
                    "type": "string",
                    "example": "Описание дисциплины"
                },
                "disciplineEducationalProgramId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "disciplineTitle": {
                    "type": "string",
                    "example": "Название дисциплины"
                }
            }
        },
        "model.PostEducationalProgram": {
            "type": "object",
            "properties": {
                "educationalProgramDescription": {
                    "type": "string",
                    "example": "Описание образовательной программы"
                },
                "educationalProgramOrganizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "educationalProgramTitle": {
                    "type": "string",
                    "example": "Название образовательной программы"
                }
            }
        },
        "model.PostKnowledge": {
            "type": "object",
            "properties": {
                "knowledgeTitle": {
                    "type": "string",
                    "example": "Название знания"
                }
            }
        },
        "model.PostKnowledgeCompetency": {
            "type": "object",
            "properties": {
                "competencyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "knowledgeId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostOrganization": {
            "type": "object",
            "properties": {
                "organizationTitle": {
                    "type": "string",
                    "example": "Название организации"
                }
            }
        },
        "model.PostPortfolio": {
            "type": "object",
            "properties": {
                "portfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostProfession": {
            "type": "object",
            "properties": {
                "professionDescription": {
                    "type": "string",
                    "example": "Описание профессии"
                },
                "professionTitle": {
                    "type": "string",
                    "example": "Название профессии"
                }
            }
        },
        "model.PostProject": {
            "type": "object",
            "properties": {
                "projectDescription": {
                    "type": "string",
                    "example": "Курс направлен на изучение поведения капибар в дикой природе..."
                },
                "projectLifeScenarion": {
                    "type": "string",
                    "example": "Проект позволит подобрать идеальную длину шерстки для ваших капибар"
                },
                "projectMainTechnologyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "projectResult": {
                    "type": "string",
                    "example": "Данные о зависимости длины шерстки капибар от продолжительности их жизни"
                },
                "projectTitle": {
                    "type": "string",
                    "example": "Исследование зивисимости длины шерстки капибар от продолжительности их жизни"
                }
            }
        },
        "model.PostProjectPortfolio": {
            "type": "object",
            "properties": {
                "PortfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ProjectId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TeamRole": {
                    "type": "string",
                    "example": "Роль в команде"
                },
                "projectSemester": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "model.PostProjectPortfolioCompetency": {
            "type": "object",
            "properties": {
                "CompetencyId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "PortfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "projectId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostStudent": {
            "type": "object",
            "properties": {
                "studentAdmitionDate": {
                    "type": "string",
                    "example": "2024-01-19"
                },
                "studentFullName": {
                    "type": "string",
                    "example": "Фамилия Имя Отчество"
                },
                "studentPortfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostStudyGroup": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "studentId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "model.PostTechnology": {
            "type": "object",
            "properties": {
                "technologyTitle": {
                    "type": "string",
                    "example": "Название технологии"
                }
            }
        },
        "model.PostTrajectory": {
            "type": "object",
            "properties": {
                "trajectoryCourseId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "trajectorySemester": {
                    "type": "integer",
                    "example": 3
                },
                "trajectoryStudentId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        }
    }
}